const readline = require('readline/promises');
const fs = require('fs/promises');
const yargs = require('yargs/yargs');
const {hideBin} = require('yargs/helpers');

const generateRandomNumber = (min, max) =>
  Math.floor(min + Math.random() * (max + 1 - min));

const game = async () => {
  const rl = readline.createInterface(process.stdin, process.stdout);
  const number = generateRandomNumber(1, 2);

  console.log(
    '\n',
    'üïπ ü™ô –ò–≥—Ä–∞ "–û—Ä–µ–ª –∏–ª–∏ —Ä–µ—à–∫–∞".\n',
    '–ó–∞–≥–∞–¥–∞–Ω–æ —á–∏—Å–ª–æ –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ –æ—Ç 1 –¥–æ 2.\n',
    '–ü–æ–ø—Ä–æ–±—É–π –µ–≥–æ –æ—Ç–≥–∞–¥–∞—Ç—å.\n',
    '–£–¥–∞—á–∏!\n'
  );

  while (true) {
    const answer = parseInt(await rl.question(' –û—Ç–≤–µ—Ç: '));

    if ([1, 2].includes(answer)) {
      const result = answer === number;

      console.log(result ? '\n –£–≥–∞–¥–∞–ª üéâ' : '\n –ù–µ —É–≥–∞–¥–∞–ª üôÅ');
      console.log(' --------------------------------------------------');
      rl.close();

      return result;
    }

    console.log(' –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 2!\n');
  }
};

yargs(hideBin(process.argv))
  .usage('Usage: $0 <command> [options]')
  .command({
    command: 'game',
    desc: '–ù–∞—á–∏–Ω–∞–µ—Ç –∏–≥—Ä—É "–û—Ä—ë–ª –∏–ª–∏ —Ä–µ—à–∫–∞"',
    builder(yargs) {
      return yargs
        .alias('f', 'file')
        .demandOption(['f']);
    },
    async handler(argv) {
      const result = await game();

      try {
        await fs.appendFile(`${argv.file}.txt`, `${Number(result)}`);

        console.log(` –†–µ–∑—É–ª—å—Ç–∞—Ç –∏–≥—Ä—ã –±—É–¥–µ—Ç —Å–æ—Ö—Ä–∞–Ω—ë–Ω –≤ '${argv.file}.txt'\n`);
      } catch (error) {
        console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –∏–≥—Ä—ã\n', error);
      }
    },
  })
  .help('h')
  .alias('h', 'help')
  .parse();
